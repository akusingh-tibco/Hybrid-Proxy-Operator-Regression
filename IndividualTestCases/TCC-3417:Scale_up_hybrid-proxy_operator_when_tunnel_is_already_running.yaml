name: TCC3417

tasks: 

# tibtunnel configuration
  - name: TCC-3417_tibTunnelConfigure
    type: foreground
    exec:
      timeout: 5s
      script:
        cmd: "/bin/bash"
        args: ["-c", "./tibtunnel configure -a ${suite.setup.secretKey_hashKey.accesskey}"]   
        capture:
          stdout:
            - name: output
              match: "((?s).*)"
    expect:
      - name: output
        operator: containsStr
        value: "'default' was successfully saved"


# Deploy Tibcotunnelroute CR
  - name: TCC-3417_tibcotunnelroute-status-withFunctions
    type: foreground
    templates:
     - input: "./resources/tibcotunnelrouteCR.yaml"
       output: "./generated/tibcotunnelrouteCR.yaml"
    exec: 
     timeout: 30s
     script: 
        cmd: "${ENV.fnSh}"
        args: ["deployResourse", "./generated/tibcotunnelrouteCR.yaml"]
        capture:
         stdout:
           - name: output
             match: "((?s).*)"
         stderr:
            - name: outerr
              match: "((?s).*)"
    expect:
     - name: status
       operator: equal
       value: 0
      
# Status of Tibcotunneroute CR
  - name: TCC-3417_tibcotunnelroute-status
    type: foreground
    exec: 
      timeout: 30s
      script: 
        cmd: "kubectl"
        args: ["get", "tibcotunnelroute", "${META_DATA_NAME}", "-n", "${NAMESPACE_TENANT}", "-o", "json"]
        capture: 
          stdout: 
            - name : status_cr
              matchType: jsonpath
              match: "{.status.resource.state}"
    expect:
      - name: status
        operator: equal
        value: 0
      - name: status_cr
        operator: containsStr
        value: "processed"

# Deploy ClientAppn Deployments
  - name: TCC-3417_deployClientApp
    type: foreground
    templates: 
      - input: "./resources/client-app.yaml"
        output: "./generated/client-app.yaml"
    exec: 
      timeout: 2m
      script:
        cmd: "${ENV.fnSh}"
        args: ["deployResourse", "./generated/client-app.yaml"]
    expect:
      - name: status
        operator: equal
        value: 0

# Status of Client Applications
  - name: TCC-3417_status_of-clientAppn
    type: foreground
    timeout: 1m
    exec:
      script: 
        cmd: "${ENV.fnSh}"
        args: ["getPodNamesUsingSelector", "${NAMESPACE_TENANT}", "app=http"]
        capture:
          stdout:
            - name: running_state
              matchType: jsonpath
              match: "{.items[*].status.phase}"
            - name: capture_pod_name
              matchType: jsonpath
              match: "{.items[0].metadata.name}"
    expect:
      - name: status
        operator: equal
        value: 0
      - name: running_state
        operator: contains
        value: "Running"
      - name: running_state
        operator: notContains
        value: "Pending"
    repeat:
      count: 10
      until: success
      sleep: 20s  

# HPO Pod name
  - name: TCC-3417_HPOPodName
    type: foreground
    exec: 
      timeout: 30s
      script: 
        cmd: "kubectl"
        args: ["get", "pods", "-l", "app.kubernetes.io/name=hybrid-proxy","-n", "aws-compute-tibco-system", "-ojson"]
        #kubectl get pods -l app.kubernetes.io/name=hybrid-proxy -n aws-compute-tibco-system
        capture: 
          stdout: 
            - name : HPOPodName
              matchType: jsonpath
              match: "{.items[*].metadata.name}"
            - name: HPOState
              matchType: jsonpath
              match: "{.items[0].status.phase}"
    expect:
      - name: status
        operator: equal
        value: 0
      - name: HPOPodName
        operator: containsStr
        value: "hybrid-proxy"
      # - name: HPOState
      #   operator: containsStr
      #   value: "Running"

# Tibtunnel Connect
  - name: TCC-3417_tibtunnelConnect
    type: background
    exec:
      script:
        cmd: "/bin/bash"
        args: ["-c", "timeout 90s ./tibtunnel connect -d --remote-debug -s ${CONTAINER_PORT}:${ONPREMISE_HOSTNAME}:${ONPREMISE_PORT} -s 8082:127.0.0.1:8082 https://${FQDN}/${ENDPOINT} -l ./tibtunnelLog-3417" ]

  - name: sleepCommand
    type: foreground
    exec:
      script:
        cmd: "sleep"
        args: ["15"]

# Scaling up client applications 
  - name: TCC-3417_scaleUp_HPO
    type: foreground
    timeout: 1m
    exec:
      script: 
        cmd: "kubectl"
        args: ["scale", "deploy", "--replicas=3","hybrid-proxy","-n", "aws-compute-tibco-system"]
    expect:
      - name: status
        operator: equal
        value: 0 

  - name: TCC-3417_sleepCommand
    type: foreground
    exec:
      script:
        cmd: "sleep"
        args: ["40"]
# Tibtunnel logs for closing tunnel (WS connection)
  - name: TCC-3417_tibtunnelLogValidate
    type: foreground
    exec:
      script:
        cmd: "/bin/bash"
       # args: ["-c", "awk '/PING/{print}' /Users/sugandhi/Desktop/GITRepository/Regression/Hybrid-Proxy-Operator-Regression/tibtunnelLog-3395 &&  '/PONG/{print}' /Users/sugandhi/Desktop/GITRepository/Regression/Hybrid-Proxy-Operator-Regression/tibtunnelLog-3395"] 
        args: ["-c", "cat $PWD/tibtunnelLog-3417 | grep 'closing tunnel (WS connection)' "]  
        capture:
          stdout:
            - name: closeTunnelOutput
              match: "((?s).*)"
    expect:
      - name: status
        operator: equal
        value: 1
      - name: closeTunnelOutput
        operator: notContainsStr
        value: "closing tunnel (WS connection)"

# Tibtunnel logs for new connection count
  - name: TCC-3418_tibtunnelLogValidateNoOfConnections
    type: foreground
    exec:
      script:
        cmd: "/bin/bash"
       # args: ["-c", "awk '/PING/{print}' /Users/sugandhi/Desktop/GITRepository/Regression/Hybrid-Proxy-Operator-Regression/tibtunnelLog-3395 &&  '/PONG/{print}' /Users/sugandhi/Desktop/GITRepository/Regression/Hybrid-Proxy-Operator-Regression/tibtunnelLog-3395"] 
        args: ["-c", "cat $PWD/tibtunnelLog-3417 | grep -c 'tunnel created (WS connection)' "]  
        capture:
          stdout:
            - name: TunnelCreationOutputCount
              match: "((?s).*)"
    expect:
      - name: status
        operator: equal
        value: 0
      - name: TunnelCreationOutputCount
        operator: containsStr
        value: "1"
  - name: TCC-3417_sleepCommand
    type: foreground
    exec:
      script:
        cmd: "sleep"
        args: ["30"]
# Scaling up client applications 
  - name: TCC-3417_scaleDownToOne_HPO
    type: foreground
    timeout: 1m
    exec:
      script: 
        cmd: "kubectl"
        args: ["scale", "deploy", "--replicas=1","hybrid-proxy","-n", "aws-compute-tibco-system"]
    expect:
      - name: status
        operator: equal
        value: 0 

        
teardown: 

# Delete the Tibcotunneroute CR
  - name: delete_yaml_file
    type: foreground
    exec: 
      timeout: 1m
      script:
        cmd: "${ENV.fnSh}"
        args: ["deleteResourse", "./generated/tibcotunnelrouteCR.yaml"]
    expect:
      - name: status
        operator: equal
        value: 0
    repeat:
      count: 8
      until: success
      sleep: 5s

# Delete the ClientApp Deployments
  - name: delete_yaml_file
    type: foreground
    timeout: 1m
    exec: 
      script:
        #cmd: "kubectl"
        #args: ["delete", "-f", "./generated/client-app.yaml"]
        cmd: "${ENV.fnSh}"
        args: ["deleteResourse", "./generated/client-app.yaml"]
    expect:
      - name: status
        operator: equal
        value: 0
    repeat:
      count: 7
      until: success
      sleep: 5s

# Verify Tibcotunneroute CR Deletion
  - name: confirm_deletionCR
    type: foreground
    exec: 
      timeout: 1m
      script: 
        #cmd: "kubectl"
        #args: ["get", "tibcotunnelroute", "-n", "${NAMESPACE_TENANT}", "-o", "json"]
        cmd: "${ENV.fnSh}"
        args: ["getResources", "tibcotunnelroute", "${NAMESPACE_TENANT}"]
        capture:
          stdout: 
            - name: confirm_deleteCR
              matchType: jsonpath
              match: "{.items[*].metadata.name}"
    expect:
      - name: status
        operator: equal
        value: 0
      - name: confirm_deleteCR
        operator: notContainsStr
        value: "${META_DATA_NAME}"
    repeat:
      count: 8
      until: success
      sleep: 5s  

# Verify ClientApp Deployments deletion
  - name: confirm_deletionA
    type: foreground
    timeout: 1m
    exec: 
      script: 
        #cmd: "kubectl"
        #args: ["get", "deploy", "-n", "${NAMESPACE_TENANT}", "-o", "json"]
        cmd: "${ENV.fnSh}"
        args: ["getResources", "deploy", "${NAMESPACE_TENANT}"]
        capture:
          stdout: 
            - name: confirm_deleteA
              matchType: jsonpath
              match: "{.items[*].metadata.name}"
    expect:
      - name: status
        operator: equal
        value: 0
      - name: confirm_deleteA
        operator: notContainsStr
        value: "${META_DATA_NAME}"
    repeat:
      count: 6
      until: success
      sleep: 5s 

# Verify client-pod deletion
  - name: confirm_client-pod_deletee
    type: foreground
    timeout: 1m
    exec: 
      script: 
        cmd: "kubectl"
        args: ["get", "po", "-n", "${NAMESPACE_TENANT}", "-o", "json"]
        capture:
          stdout: 
            - name: confirm_client-podd
              matchType: jsonpath
              match: "{.items[*].metadata.name}"
    expect:
      - name: status
        operator: equal
        value: 0
      - name: confirm_client-podd
        operator: notContainsStr
        value: "${META_DATA_NAME}"
    repeat:
      count: 8
      until: success
      sleep: 5s  